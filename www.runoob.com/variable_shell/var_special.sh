#!/bin/bash
#author: jiming.wang
#date: 2017/07/04

source ../paint.sh

#传递给脚本或函数的特殊参数
###########################################################################################################
#  变量		含义
#  $0		当前脚本的文件名
#  $n		传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2，第n个参数是${n}。
#  $#		传递给脚本或函数的参数个数。
#  $*		传递给脚本或函数的所有参数。
#  $@		传递给脚本或函数的所有参数。被双引号(" ")包含时，与 $* 稍有不同。
#  $?		上个命令的退出状态，或函数的返回值。
#  $$		当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。
#  $!	    后台运行的最后一个进程的ID号
#  $-	    显示Shell使用的当前选项，与set命令功能相同。
###########################################################################################################

# $* 与 $@ 区别：
#   相同点： 都是引用所有参数，在不加 双引号  情况下，两者相同
#   不同点： $* 与 $@ 两者的区别只有在 双引号 中体现。
#    假如，在传递参数时传递了 1 2 3 三个参数，则 "$*" 等价于 "1 2 3"，即只传递了一个参数，而 "$@" 等价于 "1" "2" "3"，即传递了三个字符串参数。

#  $* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号(" ")包含时，都以"$1" "$2" … "$n" 的形式输出所有参数。
#  但是当它们被双引号(" ")包含时，"$*" 会将所有的参数作为一个整体，以"$1 $2 … $n"的形式输出所有参数；"$@" 会将各个参数分开，以"$1" "$2" … "$n" 的形式输出所有参数。

funcTest(){
	echo "传递给函数的第一个参数为： $1"
	echo "传递给函数的第二个参数为： $2"
	echo "传递给函数的第十个参数为： $10"
	echo "传递给函数的第十个参数为： ${10}"
	echo "传递给函数的第十一个参数为： ${11}"
	
	echo "传递给函数的参数个数为： $#"
	
	echo "传递给函数的参数列表为：$@"
	echo "传递给函数的参数列表为：$*"
	echo "传递给函数的参数列表为：\"$@\""
	echo "传递给函数的参数列表为：\"$*\""
	
	paintLine
	echo "测试 \$* 与 \$@ 区别："
	echo "使用 \"\$*\" 遍历所有参数："
	i=0
	for var in "$*"
	do
		echo $var
		((++i))
	done
	echo "使用 \"\$*\" 遍历的次数为： $i"

	paintLine
	echo "使用 \"\$@\" 遍历所有参数："
	i=0
	for var in "$@"
	do
		echo $var
		let "i++"
	done
	echo "使用 \"\$@\" 遍历的次数为： $i"
	
	paintLine
	echo "使用 \$* 遍历所有参数："
	i=0
	for var in $*
	do
		echo $var
		let "i++"
	done
	echo "使用 \$* 遍历的次数为：$i"
	
	paintLine
	echo "使用 \$@ 遍历所有参数："
	i=0
	for var in $@
	do
		echo $var
		((++i))
	done
	echo "使用 \$@ 遍历的次数为：$i"
	
	sum=0
	for val in $@
	do
		((sum+=$val))
	done
	return $sum
}

#获取传递给脚本的参数
echo "执行的脚本名称为： $0"
echo "传递给脚本的第一个参数为：$1"
echo "传递给脚本的第二个参数为：$2"
echo "传递给脚本的第十个参数为：$10"
echo "传递给脚本的第十个参数为：${10}"
echo "传递给脚本的第十一个参数为：${11}"

echo "传递给脚本的所有参数为：$*，共 $# 个"
echo "传递给脚本的所有参数为：$@，共 $# 个"
echo "传递给脚本的所有参数为：\"$*\"，共 $# 个"
echo "传递给脚本的所有参数为：\"$@\"，共 $# 个"

paintLine
echo "脚本运行的当前进程ID号为： $$"
echo "后台运行的最后一个进程ID号为： $!"
echo "Shell使用的当前选项为：$-"

paintLine
funcTest 1 2 3 4 5 6 7 8 9 34 63
echo "函数返回值为： $?"